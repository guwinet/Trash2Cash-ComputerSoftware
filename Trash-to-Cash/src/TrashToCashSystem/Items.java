
package TrashToCashSystem;

import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Diogracias
 */
public final class Items extends javax.swing.JFrame {

    /**
     * Creates new form Items
     */
    Connection connect = DatabaseConnection.connectionDB();;
    PreparedStatement pre;
    ResultSet rs = null;
    DefaultTableModel model = new DefaultTableModel();
    
    public Items() {
        initComponents();
        this.setLocationRelativeTo(null);
        displayTable();
    }
    
    public void displayTable(){
        
        try 
        {
           
            pre = connect.prepareStatement("select * from items");
            rs = pre.executeQuery();
            tblTable.setModel(DbUtils.resultSetToTableModel(rs));
            tblTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
        } catch (SQLException e)
        {
        
            JOptionPane.showMessageDialog (null, e);
    }
    
        }

public void cbBarangay(){
    String sql = "SELECT * FROM items where barangay LIKE '" + cbBarangay.getSelectedItem().toString() + "'";
        
        try{
            pre = connect.prepareStatement(sql);
            rs = pre.executeQuery();
            tblTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch (SQLException e)
        {
            JOptionPane.showMessageDialog (null, e);
        }
}

public void filter(String query){
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<> (model);
        tblTable.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter (query));
    }

public void cbSector(){
     String sql = "SELECT * FROM items where sector LIKE '" + cbSector.getSelectedItem().toString() + "'";
        
        try{
            pre = connect.prepareStatement(sql);
            rs = pre.executeQuery();
            tblTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch (SQLException e)
        {
            JOptionPane.showMessageDialog (null, e);
        }
}

public void cbMonth(){
    String sql = "SELECT * FROM items where month LIKE '" + cbMonth.getSelectedItem().toString() + "'";
        
        try{
            pre = connect.prepareStatement(sql);
            rs = pre.executeQuery();
            tblTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch (SQLException e)
        {
            JOptionPane.showMessageDialog (null, e);
        }
}

public void cbYear(){
        String sql = "SELECT * FROM items where year LIKE '" + cbMonth.getSelectedItem().toString() + "'";
        
        try{
            pre = connect.prepareStatement(sql);
            rs = pre.executeQuery();
            tblTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        }catch (SQLException e)
        {
            JOptionPane.showMessageDialog (null, e);
        }
        
}

public void openFile(String file){
    try{
        File path = new File(file);
        Desktop.getDesktop().open(path);
        
    }catch(IOException ioe){
        System.out.println(ioe);
        
    }
    
}

public void rowCount(){
    model = (DefaultTableModel) tblTable.getModel();
    int row = model.getRowCount();
    tfRowCount.setText(Integer.toString(row));
    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        lblBarangay = new javax.swing.JLabel();
        cbBarangay = new javax.swing.JComboBox<>();
        lblBarangay3 = new javax.swing.JLabel();
        cbSector = new javax.swing.JComboBox<>();
        lblBarangay4 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        clrBarangay = new javax.swing.JButton();
        clrSector = new javax.swing.JButton();
        cbMonth = new javax.swing.JComboBox<>();
        cbYear = new javax.swing.JComboBox<>();
        lblBarangay2 = new javax.swing.JLabel();
        lblBarangay1 = new javax.swing.JLabel();
        btnExport = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnMain = new javax.swing.JButton();
        lblBarangay5 = new javax.swing.JLabel();
        tfRowCount = new javax.swing.JTextField();
        header = new javax.swing.JPanel();
        lblHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(240, 80));

        main.setBackground(new java.awt.Color(218, 243, 210));
        main.setPreferredSize(new java.awt.Dimension(971, 593));

        lblBarangay.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblBarangay.setForeground(new java.awt.Color(68, 105, 74));
        lblBarangay.setText("Barangay :");

        cbBarangay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "ADYA", "ANILAO", "ANILAO-LABAC", "ANTIPOLO DEL NORTE", "ANTIPOLO DEL SUR", "BAGONG POOK", "BALINTAWAK", "BANAYBANAY", "BARANGAY 12", "BOLBOK", "BUGTONG NA PULO", "BULACNIN", "BULAKLAKAN", "CALAMIAS", "CUMBA", "DAGATAN", "HALANG", "INOSLOBAN", "KUYAMNGGI", "LATAG", "LODLOD", "LUMBANG", "MABINI", "MALAGONLONG", "MALITLIT", "MARAUOY", "MATAAS NA LUPA", "MUNTING PULO", "PAGOLINGIN BATA", "PAGOLINGIN EAST", "PAGOLINGIN WEST", "PANGAO", "PINAGKAWITAN", "PINAGTONGULAN", "PLARIDEL", "POBLACION BARANGAY 1", "POBLACION BARANGAY 2", "POBLACION BARANGAY 3 ", "POBLACION BARANGAY 4", "POBLACION BARANGAY 5", "POBLACION BARANGAY 6", "POBLACION BARANGAY 7", "POBLACION BARANGAY 8", "POBLACION BARANGAY 9", "POBLACION BARANGAY 9-A", "POBLACION BARANGAY 10", "POBLACION BARANGAY 11", "PUSIL", "QUEZON", "RIZAL", "SABANG", "SAMPAGUITA", "SAN BENITO", "SAN CARLOS", "SAN CELESTINO", "SAN FRANSCISCO", "SAN GUILLERMO", "SAN JOSE", "SAN LUCAS", "SAN SALVADOR", "SAN SEBASTIAN", "SANTO NINO", "SANTO TORIBIO", "SAPAC", "SICO", "TALISAY", "TAMBO", "TANGOB", "TANGUAY", "TIBIG", "TIPACAN" }));
        cbBarangay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBarangayActionPerformed(evt);
            }
        });

        lblBarangay3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblBarangay3.setForeground(new java.awt.Color(68, 105, 74));
        lblBarangay3.setText("Sector:");

        cbSector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "4Ps", "Tugon", "Resident", "Lipe√±a", "Senior" }));
        cbSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSectorActionPerformed(evt);
            }
        });

        lblBarangay4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblBarangay4.setForeground(new java.awt.Color(68, 105, 74));
        lblBarangay4.setText("Search member ID:");

        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSearchKeyReleased(evt);
            }
        });

        clrBarangay.setForeground(new java.awt.Color(68, 105, 74));
        clrBarangay.setText("Clear");
        clrBarangay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrBarangayActionPerformed(evt);
            }
        });

        clrSector.setForeground(new java.awt.Color(68, 105, 74));
        clrSector.setText("Clear");
        clrSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrSectorActionPerformed(evt);
            }
        });

        cbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        cbMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMonthActionPerformed(evt);
            }
        });

        cbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040" }));
        cbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbYearActionPerformed(evt);
            }
        });

        lblBarangay2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblBarangay2.setForeground(new java.awt.Color(68, 105, 74));
        lblBarangay2.setText("Year:");

        lblBarangay1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblBarangay1.setForeground(new java.awt.Color(68, 105, 74));
        lblBarangay1.setText("Month:");

        btnExport.setBackground(new java.awt.Color(129, 182, 115));
        btnExport.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExport.setForeground(new java.awt.Color(68, 105, 74));
        btnExport.setText("Export to Excel");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnPrint.setBackground(new java.awt.Color(129, 182, 115));
        btnPrint.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPrint.setForeground(new java.awt.Color(68, 105, 74));
        btnPrint.setText("Print Records");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnMain.setBackground(new java.awt.Color(129, 182, 115));
        btnMain.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnMain.setForeground(new java.awt.Color(68, 105, 74));
        btnMain.setText("BACK TO MENU");
        btnMain.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMain.setFocusable(false);
        btnMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainActionPerformed(evt);
            }
        });

        lblBarangay5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblBarangay5.setForeground(new java.awt.Color(68, 105, 74));
        lblBarangay5.setText("No. of Results:");

        header.setBackground(new java.awt.Color(196, 226, 187));

        lblHeader.setBackground(new java.awt.Color(196, 226, 187));
        lblHeader.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(68, 105, 74));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Deposited Items' Database");
        lblHeader.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeader)
                .addContainerGap())
        );

        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "BARANGAY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTable);

        javax.swing.GroupLayout mainLayout = new javax.swing.GroupLayout(main);
        main.setLayout(mainLayout);
        mainLayout.setHorizontalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(lblBarangay5)
                                .addGap(18, 18, 18)
                                .addComponent(tfRowCount, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrint)
                                .addGap(18, 18, 18)
                                .addComponent(btnExport))
                            .addGroup(mainLayout.createSequentialGroup()
                                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainLayout.createSequentialGroup()
                                        .addComponent(lblBarangay4)
                                        .addGap(18, 18, 18)
                                        .addComponent(tfSearch))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainLayout.createSequentialGroup()
                                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblBarangay)
                                            .addComponent(lblBarangay3))
                                        .addGap(36, 36, 36)
                                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbSector, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbBarangay, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clrBarangay)
                                    .addComponent(clrSector))
                                .addGap(30, 30, 30)
                                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(mainLayout.createSequentialGroup()
                                        .addComponent(lblBarangay1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mainLayout.createSequentialGroup()
                                        .addComponent(lblBarangay2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                                .addComponent(btnMain, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
        );
        mainLayout.setVerticalGroup(
            mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBarangay4))
                        .addGap(14, 14, 14)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbBarangay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(clrBarangay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblBarangay))
                            .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblBarangay1)))
                        .addGap(14, 14, 14)
                        .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBarangay3)
                            .addComponent(cbSector, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clrSector, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBarangay2)
                            .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMain, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBarangay5)
                    .addComponent(tfRowCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbBarangayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBarangayActionPerformed
        // TODO add your handling code here:
        if (cbBarangay.getSelectedItem().toString().equals("----")){
            cbBarangay.setSelectedItem("----");

            if (cbSector.getSelectedItem().toString().equals("----")){

                cbSector.setSelectedItem("----");
                model = (DefaultTableModel)tblTable.getModel();
                model.setRowCount(0);
                displayTable();
            }else {
                cbBarangay.getSelectedItem();
                cbSector();
            }
        } else {
            if (cbSector.getSelectedItem().toString().equals("----")) {

                cbSector.setSelectedItem("----");
                cbBarangay();
            } else {
                String sql = "SELECT * FROM items where sector LIKE '" + cbSector.getSelectedItem().toString() + "' &pnlTablegay LIKE '" + cbBarangay.getSelectedItem().toString() + "'";

                try {
                    pre = connect.prepareStatement(sql);
                    rs = pre.executeQuery();
                    tblTable.setModel(DbUtils.resultSetToTableModel(rs));
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            }
        }

    }//GEN-LAST:event_cbBarangayActionPerformed

    private void cbSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSectorActionPerformed
        // TODO add your handling code here:
        if (cbSector.getSelectedItem().toString().equals("----")){

            cbSector.setSelectedItem("----");

            if (cbBarangay.getSelectedItem().toString().equals("----")){

                cbBarangay.setSelectedItem("----");
                model = (DefaultTableModel)tblTable.getModel();
                model.setRowCount(0);
                displayTable();
            }else {
                cbSector.getSelectedItem();
                cbBarangay();
            }
        }else {

            if (cbBarangay.getSelectedItem().toString().equals("----")){

                cbBarangay.setSelectedItem("----");
                cbBarangay();
            }else {
                String sql = "SELECT * FROM items where sector LIKE '" + cbSector.getSelectedItem().toString() + "' && barangay LIKE '" + cbBarangay.getSelectedItem().toString() + "'";

                try {
                    pre = connect.prepareStatement(sql);
                    rs = pre.executeQuery();
                    tblTable.setModel(DbUtils.resultSetToTableModel(rs));
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }

        }
    }//GEN-LAST:event_cbSectorActionPerformed

    private void tfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyReleased
        // TODO add your handling code here:
        String sql = "SELECT * FROM items where memberID LIKE '" + tfSearch.getText() + "%'";

        try{
            pre = connect.prepareStatement(sql);
            rs = pre.executeQuery();
            tblTable.setModel(DbUtils.resultSetToTableModel(rs));
        }catch (SQLException e)
        {
            JOptionPane.showMessageDialog (null, e);
        }

        filter (tfSearch.getText());

    }//GEN-LAST:event_tfSearchKeyReleased

    private void clrBarangayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrBarangayActionPerformed
        // TODO add your handling code here:
        cbBarangay.setSelectedItem("----");
    }//GEN-LAST:event_clrBarangayActionPerformed

    private void clrSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrSectorActionPerformed
        // TODO add your handling code here:
        cbSector.setSelectedItem("----");
    }//GEN-LAST:event_clrSectorActionPerformed

    private void cbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMonthActionPerformed
        // TODO add your handling code here:
        if (cbMonth.getSelectedItem().toString().equals("----")){

            if (cbYear.getSelectedItem().toString().equals("----")){
                model = (DefaultTableModel)tblTable.getModel();
                model.setRowCount(0);
                displayTable();
            }else {
                cbYear();
            }
        }else {
            String sql = "SELECT * FROM items where month LIKE '" + cbMonth.getSelectedItem().toString() + "' && year LIKE '" + cbYear.getSelectedItem().toString() + "'";

            try {
                pre = connect.prepareStatement(sql);
                rs = pre.executeQuery();
                tblTable.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }

        }

    }//GEN-LAST:event_cbMonthActionPerformed

    private void cbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbYearActionPerformed
        // TODO add your handling code here:
        if (cbYear.getSelectedItem().toString().equals("----")){

            if (cbMonth.getSelectedItem().toString().equals("----")){
                model = (DefaultTableModel)tblTable.getModel();
                model.setRowCount(0);
                displayTable();
            }else {
                cbMonth();
            }
        }else {
            String sql = "SELECT * FROM items where month LIKE '" + cbMonth.getSelectedItem().toString() + "' && year LIKE '" + cbYear.getSelectedItem().toString() + "'";

            try{
                pre = connect.prepareStatement(sql);
                rs = pre.executeQuery();
                tblTable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }

        }

    }//GEN-LAST:event_cbYearActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null){
                saveFile = new File(saveFile.toString()+ ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("Trash to Cash");

                Row rowCol = sheet.createRow(0);
                for (int i = 0; i < tblTable.getColumnCount(); i++){
                    Cell cell = rowCol.createCell(i);
                    cell.setCellValue(tblTable.getColumnName(i));

                }

                for (int j = 0; j < tblTable.getRowCount(); j++){
                    Row row = sheet.createRow(j);
                    for (int k = 0; k <tblTable. getColumnCount(); k++){
                        Cell cell = row.createCell(k);
                        if (tblTable.getValueAt(j, k) != null){
                            cell.setCellValue(tblTable.getValueAt(j, k).toString());
                        }
                    }
                }
                FileOutputStream out = new FileOutputStream(new File (saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());

            }else {
                JOptionPane.showMessageDialog(null, "Error exporting data...");
            }
        }catch(FileNotFoundException e){
            System.out.println(e);
        }catch (IOException io){
            System.out.println(io);
        }

    }//GEN-LAST:event_btnExportActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:

        MessageFormat header = new MessageFormat("Trash to Cash");
        MessageFormat footer = new MessageFormat("Page {0, number, integer}");

        try{
            tblTable.print(JTable.PrintMode.NORMAL, header, footer);

        }catch (java.awt.print.PrinterException e){
            System.err.format("Cannot print records", e.getMessage());

        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainActionPerformed
        DBOptions main = new DBOptions();
        main.setVisible(true);
        main.setTitle("Input Form");
        main.pack();
        main.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        main.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.dispose();
    }//GEN-LAST:event_btnMainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Items.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Items().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnMain;
    private javax.swing.JButton btnPrint;
    private javax.swing.JComboBox<String> cbBarangay;
    private javax.swing.JComboBox<String> cbMonth;
    private javax.swing.JComboBox<String> cbSector;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JButton clrBarangay;
    private javax.swing.JButton clrSector;
    private javax.swing.JPanel header;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBarangay;
    private javax.swing.JLabel lblBarangay1;
    private javax.swing.JLabel lblBarangay2;
    private javax.swing.JLabel lblBarangay3;
    private javax.swing.JLabel lblBarangay4;
    private javax.swing.JLabel lblBarangay5;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JPanel main;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextField tfRowCount;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
